namespace cml.lang

concept Any
concept Asset extends Any
concept NonDigitalAsset extends Asset
concept DigitalAsset extends Asset identified by id
	String id
	Number quantity
concept Token extends DigitalAsset
concept Participant extends Any 
concept Account extends Participant identified by id
	String id
	Token token
concept Party extends Account
	def deposit(Number n)
	def withdraw(Number n)
concept Contract extends Account
	Party anyone
	Party caller
	DateTime now
	DateTime contractStart
	DateTime contractEnd
	def transfer(Account a, Number n)
concept Transaction extends Any
concept Event extends Any
concept Enum extends Any
concept String extends Any
concept Boolean extends Any
abstract concept Number extends Any
	def Real toReal()
	def Integer toInteger()
concept Integer extends Number
	def Integer average(Integer i)
	def Integer max(Integer i)
	def Integer min(Integer i)
concept Real extends Number
	def Real max(Real i)
	def Real min(Real i)
	def Real sqrt()
	def Real ceil()
	def Real floor()
concept DateTime extends Any
	def Boolean isBefore(DateTime d)
	def Boolean isAfter(DateTime d)
	def Integer second()
	def Integer minute()
	def Integer hour()
	def Integer day()
	def Integer week()
	def Boolean equals(DateTime d)
	def DateTime addDuration(Duration d)
	def DateTime subtractDuration(Duration d)
	def Duration durationBetween(DateTime d)
concept Duration extends Any
	def Duration toSeconds()
	def Duration toMinutes()
	def Duration toHours()
	def Duration toDays()
	def Duration toWeeks()
	def Duration addDuration(Duration d)
	def Duration subtractDuration(Duration d)
concept Error extends Any
	String message	
abstract concept Collection extends Any
concept OrderedMap<K,V> extends Collection
	def add(V value)
	def rmv(K key)
	def Boolean contains(K key)
	def V get(Integer t)
	def Integer count()
def ensure(Boolean c, String m)
	if(!c)
		throw new Error(m)